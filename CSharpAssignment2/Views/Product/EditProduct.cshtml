@model CSharpAssignment2.Models.tbl_Product

@{
    ViewBag.Title = "EditProduct";
}

<h2>EditProduct</h2>

@using (Html.BeginForm("EditProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <hr />
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (@Model.Status.Equals("In Stock"))
                {
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Status" id="instock" value="In Stock" checked>
                        <label class="form-check-label" for="instock">
                            In Stock
                        </label>
                    </div>
                    <div class="form-check ">
                        <input class="form-check-input" type="radio" name="Status" id="stockout" value="Stock Out">
                        <label class="form-check-label" for="stockout">
                            Stock Out
                        </label>
                    </div>
                }
                @if (@Model.Status.Equals("Stock Out"))
                {
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="Status" id="instock" value="In Stock">
                        <label class="form-check-label" for="instock">
                            In Stock
                        </label>
                    </div>
                    <div class="form-check ">
                        <input class="form-check-input" type="radio" name="Status" id="stockout" value="Stock Out" checked>
                        <label class="form-check-label" for="stockout">
                            Stock Out
                        </label>
                    </div>
                }
            </div>

            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="UploadImage" name="UploadImage" class="text-justify form-control" value="@Model.Image" /><br />
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Preview", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="~/Images/@Model.Image" id="UploadImage" name="UploadImage" height="100" width="100" />
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" onsubmit="AjaxPost(this)" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ProductList")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function AjaxPost(formData) {
        var ajaxConfig = {
            type: "POST",
            url: "/Product/EditProduct",
            data: new FormData(formData),
            success: function (result) {
                alert(result);
                window.location.href = "/Product/ProductList";
            }
        }
        if ($(formData).attr('enctype') == "multipart/form-data") {
            ajaxConfig["contentType"] = false;
            ajaxConfig["processData"] = false;
        }
        $.ajax(ajaxConfig);
        return false;
    }
</script>
